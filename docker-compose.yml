version: '3.9'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: orders
    ports:
      - "5432:5432"
    networks:
      - ecommerce-net

  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    networks:
      - ecommerce-net

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - ecommerce-net

  kafka:
    image: bitnami/kafka:3.5
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper
    networks:
      - ecommerce-net

  zookeeper:
    image: bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - ecommerce-net

  orders.api:
    build:
      context: .
      dockerfile: ./src/services/Orders/Orders.API/Dockerfile 
    ports:
      - "5100:5100"
    depends_on:
      - kafka
      - mongo
      - postgres
      - redis
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5100   # ðŸ‘ˆ ForÃ§a escutar em todas as interfaces, inclusive externas
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=orders;Username=postgres;Password=postgres
      - MongoSettings__ConnectionString=mongodb://mongo:27017
      - ConnectionStrings__Redis=redis:6379                                                                                                                                                                                                                          
    networks:
      - ecommerce-net

networks:
  ecommerce-net:
    driver: bridge